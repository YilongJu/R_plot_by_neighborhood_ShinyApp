library(plotly)
packageVersion("plotly")
test_plot
setwd("/Users/yilongju/Dropbox/Study/GitHub/R_plot_by_neighborhood_ShinyApp/data")
data <- read.csv("ABM_censustract_file.csv")
varDef <- read.csv("Variable_Definitions.csv")
ct2000shp <- readOGR("nyct2000_12c/nyct2000_12c/nyct2000.shp")
boros <- readOGR("nybb_16a/nybb.shp")
ny.map <- readOGR("ZillowNeighborhoods-NY/ZillowNeighborhoods-NY.shp", layer="ZillowNeighborhoods-NY")
library(rgdal)
library(tidyverse)
library(shiny)
library(lazyeval)
library(reshape2)
library(scales)
library(ggmap)
library(Cairo)
library(maptools)
library(rgeos)
library(scales)
library(RColorBrewer)
library(foreach)
library(rsconnect)
library(plotly)
packageVersion("plotly")
setwd("/Users/yilongju/Dropbox/Study/GitHub/R_plot_by_neighborhood_ShinyApp/data")
data <- read.csv("ABM_censustract_file.csv")
varDef <- read.csv("Variable_Definitions.csv")
ct2000shp <- readOGR("nyct2000_12c/nyct2000_12c/nyct2000.shp")
boros <- readOGR("nybb_16a/nybb.shp")
ny.map <- readOGR("ZillowNeighborhoods-NY/ZillowNeighborhoods-NY.shp", layer="ZillowNeighborhoods-NY")
ct shape data
#   add to data a new column termed "id" composed of the rownames of data
ct2000shp@data$id <- rownames(ct2000shp@data)
#   create a data.frame from our spatial object
f_ct2000shp <- fortify(ct2000shp , polyname = "BoroCT2000")
#   merge the "fortified" data with the data from our spatial object
ct2000shp_DF <- merge(f_ct2000shp, ct2000shp@data, by = "id")
t2 <- data %>%
group_by(BoroCT2000) %>%
summarise(
Pop.Dens = mean(popdens),
Povrate.mean = mean(povrate),
)
ct2000shp_DF$BoroCT2000 <- as.character(ct2000shp_DF$BoroCT2000)
t2$BoroCT2000 <- as.character(t2$BoroCT2000)
merge.shp.vars <- dplyr::left_join(ct2000shp_DF, t2, by = "BoroCT2000")
# Prepare Boros shape data
#   add to data a new column termed "id" composed of the rownames of data
boros@data$id <- rownames(boros@data)
#   create a data.frame from our spatial object
f_boros <- fortify(boros, polyname = "BoroCode")
#   merge the "fortified" data with the data from our spatial object
boros_DF <- merge(f_boros, boros@data, by = "id")
#   aggregate to an upper level
bnames <- aggregate(data = boros_DF, cbind(long,lat) ~ BoroName, FUN=function(x) mean(range(x)))
#   offset the label
bnames[4,3] <- 200741.5
bnames$BoroName <- as.character(bnames$BoroName)
bnames$BoroName <- as.factor(bnames$BoroName)
# Test a plot
varName <- "Pop.Dens"
varIdxR <- 1
lowColors <- c("#132B43", "#2B4313", "#43132B")
highColors <- c("#56B1F7", "#B1F756", "#F756B1")
fill_area <- scale_fill_continuous(low = lowColors[varIdxR + 1], high = highColors[varIdxR+1], name = varName)
center_DF <- merge.shp.vars %>% group_by(BoroCT2000) %>% summarise(clong = mean(long), clat = mean(lat))
head(center_DF)
head(merge.shp.vars)
dim(center_DF)
merge.shp.vars <- merge(merge.shp.vars, center_DF, by = "BoroCT2000")
merge.shp.vars$ctrdlong <- merge.shp.vars$clong
merge.shp.vars$ctrdlat <- merge.shp.vars$clat
merge.shp.vars <- merge.shp.vars[, -ncol(merge.shp.vars)]
merge.shp.vars <- merge.shp.vars[, -ncol(merge.shp.vars)]
# >>>>> New
test_plot <- ggplot() +
geom_polygon(data = merge.shp.vars, aes(long, lat, group = group, fill = Povrate.mean)) +
geom_polygon(data = boros_DF, aes(long, lat, group = group), fill = NA, color="black") +
coord_equal(ratio = 1) +
scale_fill_distiller(labels = percent, name="Percent",
palette = "Reds", breaks = pretty_breaks(n = 4), direction = 1) +
guides(fill = guide_legend(reverse = TRUE)) +
labs(title = "Propoa") +
geom_text(data = bnames, aes(long, lat, label = BoroName), size = 3, fontface = "bold") +
theme_nothing(legend=TRUE)
test_plot
ct2000shp@data$id <- rownames(ct2000shp@data)
#   create a data.frame from our spatial object
f_ct2000shp <- fortify(ct2000shp , polyname = "BoroCT2000")
#   merge the "fortified" data with the data from our spatial object
ct2000shp_DF <- merge(f_ct2000shp, ct2000shp@data, by = "id")
t2 <- data %>%
group_by(BoroCT2000) %>%
summarise(
Pop.Dens = mean(popdens),
Povrate.mean = mean(povrate),
)
ct2000shp_DF$BoroCT2000 <- as.character(ct2000shp_DF$BoroCT2000)
t2$BoroCT2000 <- as.character(t2$BoroCT2000)
merge.shp.vars <- dplyr::left_join(ct2000shp_DF, t2, by = "BoroCT2000")
names(data)[2] <- "BoroCT2000"
data <- data[order(data$BoroCT2000),]
# Prepare ct shape data
#   add to data a new column termed "id" composed of the rownames of data
ct2000shp@data$id <- rownames(ct2000shp@data)
#   create a data.frame from our spatial object
f_ct2000shp <- fortify(ct2000shp , polyname = "BoroCT2000")
#   merge the "fortified" data with the data from our spatial object
ct2000shp_DF <- merge(f_ct2000shp, ct2000shp@data, by = "id")
t2 <- data %>%
group_by(BoroCT2000) %>%
summarise(
Pop.Dens = mean(popdens),
Povrate.mean = mean(povrate),
)
ct2000shp_DF$BoroCT2000 <- as.character(ct2000shp_DF$BoroCT2000)
t2$BoroCT2000 <- as.character(t2$BoroCT2000)
merge.shp.vars <- dplyr::left_join(ct2000shp_DF, t2, by = "BoroCT2000")
# Prepare Boros shape data
#   add to data a new column termed "id" composed of the rownames of data
boros@data$id <- rownames(boros@data)
#   create a data.frame from our spatial object
f_boros <- fortify(boros, polyname = "BoroCode")
#   merge the "fortified" data with the data from our spatial object
boros_DF <- merge(f_boros, boros@data, by = "id")
#   aggregate to an upper level
bnames <- aggregate(data = boros_DF, cbind(long,lat) ~ BoroName, FUN=function(x) mean(range(x)))
#   offset the label
bnames[4,3] <- 200741.5
bnames$BoroName <- as.character(bnames$BoroName)
bnames$BoroName <- as.factor(bnames$BoroName)
# Test a plot
varName <- "Pop.Dens"
varIdxR <- 1
lowColors <- c("#132B43", "#2B4313", "#43132B")
highColors <- c("#56B1F7", "#B1F756", "#F756B1")
fill_area <- scale_fill_continuous(low = lowColors[varIdxR + 1], high = highColors[varIdxR+1], name = varName)
center_DF <- merge.shp.vars %>% group_by(BoroCT2000) %>% summarise(clong = mean(long), clat = mean(lat))
head(center_DF)
head(merge.shp.vars)
dim(center_DF)
merge.shp.vars <- merge(merge.shp.vars, center_DF, by = "BoroCT2000")
merge.shp.vars$ctrdlong <- merge.shp.vars$clong
merge.shp.vars$ctrdlat <- merge.shp.vars$clat
merge.shp.vars <- merge.shp.vars[, -ncol(merge.shp.vars)]
merge.shp.vars <- merge.shp.vars[, -ncol(merge.shp.vars)]
# >>>>> New
test_plot <- ggplot() +
geom_polygon(data = merge.shp.vars, aes(long, lat, group = group, fill = Povrate.mean)) +
geom_polygon(data = boros_DF, aes(long, lat, group = group), fill = NA, color="black") +
coord_equal(ratio = 1) +
scale_fill_distiller(labels = percent, name="Percent",
palette = "Reds", breaks = pretty_breaks(n = 4), direction = 1) +
guides(fill = guide_legend(reverse = TRUE)) +
labs(title = "Propoa") +
geom_text(data = bnames, aes(long, lat, label = BoroName), size = 3, fontface = "bold") +
theme_nothing(legend=TRUE)
test_plot
# ggsave(plot = test_plot, filename = "Propoa10order.png",
#        width=20,
test_plotly <- ggplotly(test_plot)
devtools::install_github('hadley/ggplot2')
